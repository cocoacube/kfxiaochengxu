{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/gradient/source/css/style.css","path":"css/style.css","modified":0,"renderable":1},{"_id":"themes/gradient/source/img/cursor.png","path":"img/cursor.png","modified":0,"renderable":1},{"_id":"themes/gradient/source/font/Typodermic - GoodTimesRg-Regular.otf","path":"font/Typodermic - GoodTimesRg-Regular.otf","modified":0,"renderable":1},{"_id":"themes/gradient/source/img/cursor_hand.png","path":"img/cursor_hand.png","modified":0,"renderable":1},{"_id":"themes/gradient/source/font/Typodermic - GoodTimesRg-Regular.ttf","path":"font/Typodermic - GoodTimesRg-Regular.ttf","modified":0,"renderable":1},{"_id":"themes/gradient/source/img/default.jpg","path":"img/default.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/gradient/_config.yml","hash":"4e59bd1ff737eb24ecfe22dcc9287096d950cd9d","modified":1541434259167},{"_id":"themes/gradient/README.md","hash":"819b01874323202c85e87e1111e21c1af396bc10","modified":1540962529655},{"_id":"themes/gradient/LICENSE","hash":"24944bf7920108f5a4790e6071c32e9102760c37","modified":1540962529655},{"_id":"source/_posts/开发微信小程序准备工作.md","hash":"93c3ce9add1df86ac46906d4903f3eac533e3b7f","modified":1541526669923},{"_id":"source/_posts/hello-world.md","hash":"4780c53e99d030a8dd2d39e23844c75e38edf18b","modified":1541126974599},{"_id":"source/_posts/倒计时按钮.md","hash":"8f2c3c38293024a9249b904b7202985ba2a1cd52","modified":1541126411272},{"_id":"themes/gradient/layout/archive.ejs","hash":"13050e627093d56a1473797a20ccae7fc4a37faa","modified":1540962529658},{"_id":"themes/gradient/layout/index.ejs","hash":"6ee63e954ba1a70aabb68803e129824a002e0a2e","modified":1540962529658},{"_id":"themes/gradient/layout/layout.ejs","hash":"bbfd2d3029788deb1fc5f41aff84518b15b4a192","modified":1540962529658},{"_id":"themes/gradient/layout/post.ejs","hash":"6cb567e02e6e3af5ce112f211cdce2755c9dd28d","modified":1541127097707},{"_id":"themes/gradient/layout/_partial/after-footer.ejs","hash":"a00d0989a19017c00d22430a70a7f2e9bd71ef85","modified":1540962529656},{"_id":"themes/gradient/layout/_partial/article-excerpt.ejs","hash":"8cb7fe108cda8da8d2f30a1777f3eb62e6c08fee","modified":1540962529656},{"_id":"themes/gradient/layout/_partial/article-archive.ejs","hash":"a706094e18ae652416ce004cc3ee2c418944d388","modified":1540962529656},{"_id":"themes/gradient/layout/_partial/article-full.ejs","hash":"ae1b64f3aab90466e72d96866036eaeb8631a027","modified":1541128319619},{"_id":"themes/gradient/layout/_partial/footer.ejs","hash":"12962717254c0d50496d6c2a6ca1c8e1aff85f29","modified":1540962529657},{"_id":"themes/gradient/layout/_partial/categories.ejs","hash":"4e879151244e64112b39674361b61c413d7e7414","modified":1540962529657},{"_id":"themes/gradient/layout/_partial/head.ejs","hash":"5cd381d23b28772af8927521d6ff65cb776b38a4","modified":1540962529657},{"_id":"themes/gradient/layout/_partial/menu.ejs","hash":"c0e4b57417224688e53071a5031c395f30676ad2","modified":1540962529657},{"_id":"themes/gradient/layout/_partial/pagination.ejs","hash":"e6231150e7ad1fba0a125f8cdde36d7fb602fbf4","modified":1540962529657},{"_id":"themes/gradient/layout/_partial/pagination-post.ejs","hash":"50af809c968361c70c69368231a36e7ea684228f","modified":1540962529657},{"_id":"themes/gradient/layout/_partial/tags.ejs","hash":"5be1ad3ffcc0cbd3ac565093d47bc56b80c28b6e","modified":1540962529658},{"_id":"themes/gradient/source/css/style.css","hash":"1c7a564b9feb838f91bcb7b182351e8027076a74","modified":1540962529659},{"_id":"themes/gradient/source/img/cursor.png","hash":"081ab7840a005a9af971d402990b40c110bb7254","modified":1540962529661},{"_id":"themes/gradient/source/font/Typodermic - GoodTimesRg-Regular.otf","hash":"02074c129dc31d24cc6e30d017f2bfd9db621878","modified":1540962529660},{"_id":"themes/gradient/source/img/cursor_hand.png","hash":"d93c7aeadfb95732e827b4d557cccd65a1523f10","modified":1540962529661},{"_id":"themes/gradient/source/font/Typodermic - GoodTimesRg-Regular.ttf","hash":"59511caffaea7d98c944fc166882e80f85566d11","modified":1540962529660},{"_id":"themes/gradient/source/img/default.jpg","hash":"74460c0a15a218b6b01173755061d81f8f5dff5b","modified":1540962529662},{"_id":"public/2017/10/28/hello-world/index.html","hash":"9be710433c5a4f2bcc03ff9f52faa6e756653030","modified":1541526679965},{"_id":"public/archives/index.html","hash":"903a1a53f1438bcd1541b623d8819d3c18d108d8","modified":1541526747376},{"_id":"public/archives/2017/index.html","hash":"f075c4d49077f07f1744dafcb8f51cbfb545371e","modified":1541526679969},{"_id":"public/archives/2017/10/index.html","hash":"3f97bedceeb86a3c518256a0ebb41924b0c19d9f","modified":1541526679970},{"_id":"public/archives/2018/index.html","hash":"d4ad087d9cc9dd158e39d3e85a6afe62247fb5cf","modified":1541526747376},{"_id":"public/archives/2018/11/index.html","hash":"d11380a503ed867763ab7628496398656e9de681","modified":1541526747379},{"_id":"public/index.html","hash":"30df5d42c7fe05cb1568f81e1aaa4b062ca795cc","modified":1541526747381},{"_id":"public/2018/11/01/倒计时按钮/index.html","hash":"876e7ce029ed2a570af0468e2bbdf580c4062f45","modified":1541526747381},{"_id":"public/2018/11/07/开发微信小程序准备工作/index.html","hash":"03c3d5ccc6f8bbb8c449e193c72d73f0fccd1d08","modified":1541526679973},{"_id":"public/img/cursor.png","hash":"081ab7840a005a9af971d402990b40c110bb7254","modified":1541526679975},{"_id":"public/font/Typodermic - GoodTimesRg-Regular.otf","hash":"02074c129dc31d24cc6e30d017f2bfd9db621878","modified":1541526679975},{"_id":"public/img/cursor_hand.png","hash":"d93c7aeadfb95732e827b4d557cccd65a1523f10","modified":1541526679975},{"_id":"public/css/prism-okaidia.css","hash":"e6ba835f5a5b5506158830c5df7e8ff875ed12e4","modified":1541526679975},{"_id":"public/css/prism-line-numbers.css","hash":"e0db113a99e4a09d2161a539b1652d96e4a22fac","modified":1541526679975},{"_id":"public/font/Typodermic - GoodTimesRg-Regular.ttf","hash":"59511caffaea7d98c944fc166882e80f85566d11","modified":1541526679976},{"_id":"public/img/default.jpg","hash":"74460c0a15a218b6b01173755061d81f8f5dff5b","modified":1541526679977},{"_id":"public/css/style.css","hash":"1c7a564b9feb838f91bcb7b182351e8027076a74","modified":1541526679979},{"_id":"source/_posts/准备开发微信小程序.md","hash":"bf77202e6bbf3c67c1f22b421ff1a7f7aa619353","modified":1541526736398},{"_id":"public/2018/11/07/准备开发微信小程序/index.html","hash":"0ba97a23468fa9741e1027096c3135b72f6b58b5","modified":1541526747382}],"Category":[],"Data":[],"Page":[],"Post":[{"uuid":"ee3dda50-de49-11e8-b21e-7bfb8e621fb6","title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\nuuid: ee3dda50-de49-11e8-b21e-7bfb8e621fb6\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2017-10-28T00:39:58.000Z","updated":"2018-11-02T02:49:34.599Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjo616mis00011xfy7okvmhi7","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><pre class=\"line-numbers language-bash\"><code class=\"language-bash\">$ hexo new <span class=\"token string\">\"My New Post\"</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><pre class=\"line-numbers language-bash\"><code class=\"language-bash\">$ hexo server\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><pre class=\"line-numbers language-bash\"><code class=\"language-bash\">$ hexo generate\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><pre class=\"line-numbers language-bash\"><code class=\"language-bash\">$ hexo deploy\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><pre><code class=\"bash\">$ hexo new &quot;My New Post&quot;\n</code></pre>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><pre><code class=\"bash\">$ hexo server\n</code></pre>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><pre><code class=\"bash\">$ hexo generate\n</code></pre>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><pre><code class=\"bash\">$ hexo deploy\n</code></pre>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"uuid":"9e788430-de48-11e8-98ff-33eb863de5d7","title":"微信小程序倒计时按钮","date":"2018-11-01T15:58:22.000Z","_content":"\n日常的小程序使用中，经常会有发送短信验证码的按钮，这个按钮有倒计时的属性，在倒计时期间，按钮是不可点击的状态。这种按钮非常实用，那么我们就来开发一个这样的按钮。\n\n\n\n#### CountdownButton 基础代码\n\n\n```html\n<button class='countdown-btn' bindtap='sendCode' disabled='{{isCounting}}'>\n   <text hidden='{{isCounting}}'>{{text}}</text> \n   <text hidden='{{!isCounting}}'>{{countdownText}}</text>\n</button>\t\n\n```\n\n上面的代码有几个变量的绑定，bindtap绑定了一个sendCode方法，disabled绑定了isCounting变量。isCounting主要用来指示CountdownButton的状态。剩余两个变量text和countdownText分别用来展示按钮在不同状态时所显示的内容。\n\n#### Step 1\n\n第一步需要将上面的基础代码放入到 .wxml文件中想要显示的位置。\n\n#### Step 2\n\n第二步打开.js文件，在data域中声明上面需要绑定的几个变量：isCounting, text, countdownText。\n除了这三个变量，我们还增加了一个countdownDuration的值，这个值用来设定倒计时时长，此处我们默认设置了10秒钟。\n\n\n```javascript\n\t//index.js\n\tconst app = getApp()\n\n\tPage({\n\t  data: {\n\t    ...\n\t    isCounting: false,\n\t    countdownText: '0s',\n\t    text: '获取验证码',\n\t    countdownDuration: 10,\n\t    ...\n\n\t  },\n\n\t  ...\n\t})\n```\n\n#### Step 3\n\n第三步我们需要实现sendCode的逻辑代码。在sendCode方法中，首先我们使用了Date.now()获取了点击按钮那一时刻的时间，并且存在了start变量中（这里的时间是milliseconds）。我们希望这个倒计时按钮可以每一秒钟都更新倒计时状态，为了达成这个目标，我们使用了setInterval方法。setInterval方法需要传入一个function和一个每次重复的时间间隔（单位是milliseconds）。这里我们把重复的时间间隔设定为1000 milliseconds，也就是1秒。\n\n在传入的方法内部，我们首先要做的是获取当前时刻的时间，然后与start做差获得时间差（单位milliseconds），简单的数学运算后我们可以得到流逝的时间。Math.round方法主要用来将float数变成整数。在if逻辑判断中，当流逝的时间差小于我们初始设定的间隔时间（countdownDuration: 10）时，我们更新isCounting状态为true，并且对应的更新countdownText的值。直到时间差超过了10秒，我们将isCounting状态设置回false，表明按钮恢复到可点击状态。\n\nclearInterval方法是对setInterval进行终止的操作。\n\n\n```javascript\n\n\t//index.js\n\tconst app = getApp()\n\n\tPage({\n\t  data: {\n\t  \t...\n\t    \n\t    isCounting: false,\n\t    countdownText: '0s',\n\t    text: '获取验证码',\n\t    countdownDuration: 10,\n\n\t    ...\n\t  },\n\n\t  sendCode: function(){\n\t    console.log('code sent');\n\n\t    var start = Date.now();\n\n\t    let globalThis = this;\n\t    var repeat = setInterval(function () { \n\t      var now = Date.now();\n\t      var seconds = Math.round((now - start)/1000);\n\n\t      console.log(seconds);\n\n\t      if (seconds < globalThis.data.countdownDuration) {\n\t        globalThis.setData({\n\t          isCounting: true,\n\t          countdownText: `${globalThis.data.countdownDuration - seconds} s`,\n\t        });\n\t      }else {\n\t        globalThis.setData({\n\t          isCounting: false,\n\t          countdownText: `10 s`\n\t        })\n\t        clearInterval(repeat);\n\t      }\n\n\t    }, 1000);\n\t  }\n\t})\n\n```\n\n\n代码中的 let globalThis = this 需要理解。在setInterval中的function代码，其实已经创建了一个新的子域，this只能调用这个子域中的变量。因此我们需要在进入子域前，将最外层域的this存到globalThis中，如此操作才可以获取到data中对应的变量和方法。\n\n\n到此，一个倒计时按钮就做好了！\n\n[点击下载案例代码](https://www.haoqigood.com)\n\n\n\n\n\n","source":"_posts/倒计时按钮.md","raw":"---\nuuid: 9e788430-de48-11e8-98ff-33eb863de5d7\ntitle: 微信小程序倒计时按钮\ndate: 2018-11-01 23:58:22\ntags:\n---\n\n日常的小程序使用中，经常会有发送短信验证码的按钮，这个按钮有倒计时的属性，在倒计时期间，按钮是不可点击的状态。这种按钮非常实用，那么我们就来开发一个这样的按钮。\n\n\n\n#### CountdownButton 基础代码\n\n\n```html\n<button class='countdown-btn' bindtap='sendCode' disabled='{{isCounting}}'>\n   <text hidden='{{isCounting}}'>{{text}}</text> \n   <text hidden='{{!isCounting}}'>{{countdownText}}</text>\n</button>\t\n\n```\n\n上面的代码有几个变量的绑定，bindtap绑定了一个sendCode方法，disabled绑定了isCounting变量。isCounting主要用来指示CountdownButton的状态。剩余两个变量text和countdownText分别用来展示按钮在不同状态时所显示的内容。\n\n#### Step 1\n\n第一步需要将上面的基础代码放入到 .wxml文件中想要显示的位置。\n\n#### Step 2\n\n第二步打开.js文件，在data域中声明上面需要绑定的几个变量：isCounting, text, countdownText。\n除了这三个变量，我们还增加了一个countdownDuration的值，这个值用来设定倒计时时长，此处我们默认设置了10秒钟。\n\n\n```javascript\n\t//index.js\n\tconst app = getApp()\n\n\tPage({\n\t  data: {\n\t    ...\n\t    isCounting: false,\n\t    countdownText: '0s',\n\t    text: '获取验证码',\n\t    countdownDuration: 10,\n\t    ...\n\n\t  },\n\n\t  ...\n\t})\n```\n\n#### Step 3\n\n第三步我们需要实现sendCode的逻辑代码。在sendCode方法中，首先我们使用了Date.now()获取了点击按钮那一时刻的时间，并且存在了start变量中（这里的时间是milliseconds）。我们希望这个倒计时按钮可以每一秒钟都更新倒计时状态，为了达成这个目标，我们使用了setInterval方法。setInterval方法需要传入一个function和一个每次重复的时间间隔（单位是milliseconds）。这里我们把重复的时间间隔设定为1000 milliseconds，也就是1秒。\n\n在传入的方法内部，我们首先要做的是获取当前时刻的时间，然后与start做差获得时间差（单位milliseconds），简单的数学运算后我们可以得到流逝的时间。Math.round方法主要用来将float数变成整数。在if逻辑判断中，当流逝的时间差小于我们初始设定的间隔时间（countdownDuration: 10）时，我们更新isCounting状态为true，并且对应的更新countdownText的值。直到时间差超过了10秒，我们将isCounting状态设置回false，表明按钮恢复到可点击状态。\n\nclearInterval方法是对setInterval进行终止的操作。\n\n\n```javascript\n\n\t//index.js\n\tconst app = getApp()\n\n\tPage({\n\t  data: {\n\t  \t...\n\t    \n\t    isCounting: false,\n\t    countdownText: '0s',\n\t    text: '获取验证码',\n\t    countdownDuration: 10,\n\n\t    ...\n\t  },\n\n\t  sendCode: function(){\n\t    console.log('code sent');\n\n\t    var start = Date.now();\n\n\t    let globalThis = this;\n\t    var repeat = setInterval(function () { \n\t      var now = Date.now();\n\t      var seconds = Math.round((now - start)/1000);\n\n\t      console.log(seconds);\n\n\t      if (seconds < globalThis.data.countdownDuration) {\n\t        globalThis.setData({\n\t          isCounting: true,\n\t          countdownText: `${globalThis.data.countdownDuration - seconds} s`,\n\t        });\n\t      }else {\n\t        globalThis.setData({\n\t          isCounting: false,\n\t          countdownText: `10 s`\n\t        })\n\t        clearInterval(repeat);\n\t      }\n\n\t    }, 1000);\n\t  }\n\t})\n\n```\n\n\n代码中的 let globalThis = this 需要理解。在setInterval中的function代码，其实已经创建了一个新的子域，this只能调用这个子域中的变量。因此我们需要在进入子域前，将最外层域的this存到globalThis中，如此操作才可以获取到data中对应的变量和方法。\n\n\n到此，一个倒计时按钮就做好了！\n\n[点击下载案例代码](https://www.haoqigood.com)\n\n\n\n\n\n","slug":"倒计时按钮","published":1,"updated":"2018-11-02T02:40:11.272Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjo616miv00021xfya1wxs6ez","content":"<p>日常的小程序使用中，经常会有发送短信验证码的按钮，这个按钮有倒计时的属性，在倒计时期间，按钮是不可点击的状态。这种按钮非常实用，那么我们就来开发一个这样的按钮。</p>\n<h4 id=\"CountdownButton-基础代码\"><a href=\"#CountdownButton-基础代码\" class=\"headerlink\" title=\"CountdownButton 基础代码\"></a>CountdownButton 基础代码</h4><pre class=\"line-numbers language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">'</span>countdown-btn<span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">bindtap</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">'</span>sendCode<span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">disabled</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">'</span>{{isCounting}}<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">></span></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>text</span> <span class=\"token attr-name\">hidden</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">'</span>{{isCounting}}<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">></span></span>{{text}}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>text</span><span class=\"token punctuation\">></span></span> \n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>text</span> <span class=\"token attr-name\">hidden</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">'</span>{{!isCounting}}<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">></span></span>{{countdownText}}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>text</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>    \n\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>上面的代码有几个变量的绑定，bindtap绑定了一个sendCode方法，disabled绑定了isCounting变量。isCounting主要用来指示CountdownButton的状态。剩余两个变量text和countdownText分别用来展示按钮在不同状态时所显示的内容。</p>\n<h4 id=\"Step-1\"><a href=\"#Step-1\" class=\"headerlink\" title=\"Step 1\"></a>Step 1</h4><p>第一步需要将上面的基础代码放入到 .wxml文件中想要显示的位置。</p>\n<h4 id=\"Step-2\"><a href=\"#Step-2\" class=\"headerlink\" title=\"Step 2\"></a>Step 2</h4><p>第二步打开.js文件，在data域中声明上面需要绑定的几个变量：isCounting, text, countdownText。<br>除了这三个变量，我们还增加了一个countdownDuration的值，这个值用来设定倒计时时长，此处我们默认设置了10秒钟。</p>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\">    <span class=\"token comment\" spellcheck=\"true\">//index.js</span>\n    <span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">getApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token function\">Page</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      data<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token operator\">...</span>\n        isCounting<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n        countdownText<span class=\"token punctuation\">:</span> <span class=\"token string\">'0s'</span><span class=\"token punctuation\">,</span>\n        text<span class=\"token punctuation\">:</span> <span class=\"token string\">'获取验证码'</span><span class=\"token punctuation\">,</span>\n        countdownDuration<span class=\"token punctuation\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n        <span class=\"token operator\">...</span>\n\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n      <span class=\"token operator\">...</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"Step-3\"><a href=\"#Step-3\" class=\"headerlink\" title=\"Step 3\"></a>Step 3</h4><p>第三步我们需要实现sendCode的逻辑代码。在sendCode方法中，首先我们使用了Date.now()获取了点击按钮那一时刻的时间，并且存在了start变量中（这里的时间是milliseconds）。我们希望这个倒计时按钮可以每一秒钟都更新倒计时状态，为了达成这个目标，我们使用了setInterval方法。setInterval方法需要传入一个function和一个每次重复的时间间隔（单位是milliseconds）。这里我们把重复的时间间隔设定为1000 milliseconds，也就是1秒。</p>\n<p>在传入的方法内部，我们首先要做的是获取当前时刻的时间，然后与start做差获得时间差（单位milliseconds），简单的数学运算后我们可以得到流逝的时间。Math.round方法主要用来将float数变成整数。在if逻辑判断中，当流逝的时间差小于我们初始设定的间隔时间（countdownDuration: 10）时，我们更新isCounting状态为true，并且对应的更新countdownText的值。直到时间差超过了10秒，我们将isCounting状态设置回false，表明按钮恢复到可点击状态。</p>\n<p>clearInterval方法是对setInterval进行终止的操作。</p>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\">\n    <span class=\"token comment\" spellcheck=\"true\">//index.js</span>\n    <span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">getApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token function\">Page</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      data<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token operator\">...</span>\n\n        isCounting<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n        countdownText<span class=\"token punctuation\">:</span> <span class=\"token string\">'0s'</span><span class=\"token punctuation\">,</span>\n        text<span class=\"token punctuation\">:</span> <span class=\"token string\">'获取验证码'</span><span class=\"token punctuation\">,</span>\n        countdownDuration<span class=\"token punctuation\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token operator\">...</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n      sendCode<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'code sent'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">var</span> start <span class=\"token operator\">=</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">let</span> globalThis <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">var</span> repeat <span class=\"token operator\">=</span> <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> \n          <span class=\"token keyword\">var</span> now <span class=\"token operator\">=</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">var</span> seconds <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>now <span class=\"token operator\">-</span> start<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>seconds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>seconds <span class=\"token operator\">&lt;</span> globalThis<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>countdownDuration<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            globalThis<span class=\"token punctuation\">.</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n              isCounting<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n              countdownText<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>globalThis<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>countdownDuration <span class=\"token operator\">-</span> seconds<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> s`</span></span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            globalThis<span class=\"token punctuation\">.</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n              isCounting<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n              countdownText<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`10 s`</span></span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n            <span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span>repeat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>代码中的 let globalThis = this 需要理解。在setInterval中的function代码，其实已经创建了一个新的子域，this只能调用这个子域中的变量。因此我们需要在进入子域前，将最外层域的this存到globalThis中，如此操作才可以获取到data中对应的变量和方法。</p>\n<p>到此，一个倒计时按钮就做好了！</p>\n<p><a href=\"https://www.haoqigood.com\" target=\"_blank\" rel=\"noopener\">点击下载案例代码</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>日常的小程序使用中，经常会有发送短信验证码的按钮，这个按钮有倒计时的属性，在倒计时期间，按钮是不可点击的状态。这种按钮非常实用，那么我们就来开发一个这样的按钮。</p>\n<h4 id=\"CountdownButton-基础代码\"><a href=\"#CountdownButton-基础代码\" class=\"headerlink\" title=\"CountdownButton 基础代码\"></a>CountdownButton 基础代码</h4><pre><code class=\"html\">&lt;button class=&#39;countdown-btn&#39; bindtap=&#39;sendCode&#39; disabled=&#39;{{isCounting}}&#39;&gt;\n   &lt;text hidden=&#39;{{isCounting}}&#39;&gt;{{text}}&lt;/text&gt; \n   &lt;text hidden=&#39;{{!isCounting}}&#39;&gt;{{countdownText}}&lt;/text&gt;\n&lt;/button&gt;    \n\n</code></pre>\n<p>上面的代码有几个变量的绑定，bindtap绑定了一个sendCode方法，disabled绑定了isCounting变量。isCounting主要用来指示CountdownButton的状态。剩余两个变量text和countdownText分别用来展示按钮在不同状态时所显示的内容。</p>\n<h4 id=\"Step-1\"><a href=\"#Step-1\" class=\"headerlink\" title=\"Step 1\"></a>Step 1</h4><p>第一步需要将上面的基础代码放入到 .wxml文件中想要显示的位置。</p>\n<h4 id=\"Step-2\"><a href=\"#Step-2\" class=\"headerlink\" title=\"Step 2\"></a>Step 2</h4><p>第二步打开.js文件，在data域中声明上面需要绑定的几个变量：isCounting, text, countdownText。<br>除了这三个变量，我们还增加了一个countdownDuration的值，这个值用来设定倒计时时长，此处我们默认设置了10秒钟。</p>\n<pre><code class=\"javascript\">    //index.js\n    const app = getApp()\n\n    Page({\n      data: {\n        ...\n        isCounting: false,\n        countdownText: &#39;0s&#39;,\n        text: &#39;获取验证码&#39;,\n        countdownDuration: 10,\n        ...\n\n      },\n\n      ...\n    })\n</code></pre>\n<h4 id=\"Step-3\"><a href=\"#Step-3\" class=\"headerlink\" title=\"Step 3\"></a>Step 3</h4><p>第三步我们需要实现sendCode的逻辑代码。在sendCode方法中，首先我们使用了Date.now()获取了点击按钮那一时刻的时间，并且存在了start变量中（这里的时间是milliseconds）。我们希望这个倒计时按钮可以每一秒钟都更新倒计时状态，为了达成这个目标，我们使用了setInterval方法。setInterval方法需要传入一个function和一个每次重复的时间间隔（单位是milliseconds）。这里我们把重复的时间间隔设定为1000 milliseconds，也就是1秒。</p>\n<p>在传入的方法内部，我们首先要做的是获取当前时刻的时间，然后与start做差获得时间差（单位milliseconds），简单的数学运算后我们可以得到流逝的时间。Math.round方法主要用来将float数变成整数。在if逻辑判断中，当流逝的时间差小于我们初始设定的间隔时间（countdownDuration: 10）时，我们更新isCounting状态为true，并且对应的更新countdownText的值。直到时间差超过了10秒，我们将isCounting状态设置回false，表明按钮恢复到可点击状态。</p>\n<p>clearInterval方法是对setInterval进行终止的操作。</p>\n<pre><code class=\"javascript\">\n    //index.js\n    const app = getApp()\n\n    Page({\n      data: {\n          ...\n\n        isCounting: false,\n        countdownText: &#39;0s&#39;,\n        text: &#39;获取验证码&#39;,\n        countdownDuration: 10,\n\n        ...\n      },\n\n      sendCode: function(){\n        console.log(&#39;code sent&#39;);\n\n        var start = Date.now();\n\n        let globalThis = this;\n        var repeat = setInterval(function () { \n          var now = Date.now();\n          var seconds = Math.round((now - start)/1000);\n\n          console.log(seconds);\n\n          if (seconds &lt; globalThis.data.countdownDuration) {\n            globalThis.setData({\n              isCounting: true,\n              countdownText: `${globalThis.data.countdownDuration - seconds} s`,\n            });\n          }else {\n            globalThis.setData({\n              isCounting: false,\n              countdownText: `10 s`\n            })\n            clearInterval(repeat);\n          }\n\n        }, 1000);\n      }\n    })\n\n</code></pre>\n<p>代码中的 let globalThis = this 需要理解。在setInterval中的function代码，其实已经创建了一个新的子域，this只能调用这个子域中的变量。因此我们需要在进入子域前，将最外层域的this存到globalThis中，如此操作才可以获取到data中对应的变量和方法。</p>\n<p>到此，一个倒计时按钮就做好了！</p>\n<p><a href=\"https://www.haoqigood.com\" target=\"_blank\" rel=\"noopener\">点击下载案例代码</a></p>\n"},{"uuid":"79326f40-e1ec-11e8-ac28-37eff3ab12bc","title":"准备开发微信小程序","date":"2018-11-06T17:50:39.000Z","_content":"\n\n[官方教程](https://developers.weixin.qq.com/miniprogram/dev/)\n\n\n\n#### Step 1 | 申请开发者账号\n\n为了更好的管理自己的小程序，以及未来的小程序发布，最好的方式是先创建一个自己的开发者账号。大家可以按照官方提供的文档，申请和注册自己的小程序开发账号。\n\n\n\n#### Step 2 | 下载开发工具\n\n[小程序开发工具](https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html?t=18110616)\n\n在申请开发者账号后，需要下载小程序的开发者工具。大家根据自己使用的电脑系统下载对应的版本。笔者使用的是Mac，所以下载Mac OS版本。\n\n\n\n#### Step 3 | 开始开发\n\n打开开发者工具，创建QuickStart项目，我们就可以开始开发小程序了。","source":"_posts/准备开发微信小程序.md","raw":"---\nuuid: 79326f40-e1ec-11e8-ac28-37eff3ab12bc\ntitle: 准备开发微信小程序\ndate: 2018-11-07 01:50:39\ntags:\n---\n\n\n[官方教程](https://developers.weixin.qq.com/miniprogram/dev/)\n\n\n\n#### Step 1 | 申请开发者账号\n\n为了更好的管理自己的小程序，以及未来的小程序发布，最好的方式是先创建一个自己的开发者账号。大家可以按照官方提供的文档，申请和注册自己的小程序开发账号。\n\n\n\n#### Step 2 | 下载开发工具\n\n[小程序开发工具](https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html?t=18110616)\n\n在申请开发者账号后，需要下载小程序的开发者工具。大家根据自己使用的电脑系统下载对应的版本。笔者使用的是Mac，所以下载Mac OS版本。\n\n\n\n#### Step 3 | 开始开发\n\n打开开发者工具，创建QuickStart项目，我们就可以开始开发小程序了。","slug":"准备开发微信小程序","published":1,"updated":"2018-11-06T17:54:53.430Z","_id":"cjo617h9700002bfyitp6rao9","comments":1,"layout":"post","photos":[],"link":"","content":"<p><a href=\"https://developers.weixin.qq.com/miniprogram/dev/\" target=\"_blank\" rel=\"noopener\">官方教程</a></p>\n<h4 id=\"Step-1-申请开发者账号\"><a href=\"#Step-1-申请开发者账号\" class=\"headerlink\" title=\"Step 1 | 申请开发者账号\"></a>Step 1 | 申请开发者账号</h4><p>为了更好的管理自己的小程序，以及未来的小程序发布，最好的方式是先创建一个自己的开发者账号。大家可以按照官方提供的文档，申请和注册自己的小程序开发账号。</p>\n<h4 id=\"Step-2-下载开发工具\"><a href=\"#Step-2-下载开发工具\" class=\"headerlink\" title=\"Step 2 | 下载开发工具\"></a>Step 2 | 下载开发工具</h4><p><a href=\"https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html?t=18110616\" target=\"_blank\" rel=\"noopener\">小程序开发工具</a></p>\n<p>在申请开发者账号后，需要下载小程序的开发者工具。大家根据自己使用的电脑系统下载对应的版本。笔者使用的是Mac，所以下载Mac OS版本。</p>\n<h4 id=\"Step-3-开始开发\"><a href=\"#Step-3-开始开发\" class=\"headerlink\" title=\"Step 3 | 开始开发\"></a>Step 3 | 开始开发</h4><p>打开开发者工具，创建QuickStart项目，我们就可以开始开发小程序了。</p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://developers.weixin.qq.com/miniprogram/dev/\" target=\"_blank\" rel=\"noopener\">官方教程</a></p>\n<h4 id=\"Step-1-申请开发者账号\"><a href=\"#Step-1-申请开发者账号\" class=\"headerlink\" title=\"Step 1 | 申请开发者账号\"></a>Step 1 | 申请开发者账号</h4><p>为了更好的管理自己的小程序，以及未来的小程序发布，最好的方式是先创建一个自己的开发者账号。大家可以按照官方提供的文档，申请和注册自己的小程序开发账号。</p>\n<h4 id=\"Step-2-下载开发工具\"><a href=\"#Step-2-下载开发工具\" class=\"headerlink\" title=\"Step 2 | 下载开发工具\"></a>Step 2 | 下载开发工具</h4><p><a href=\"https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html?t=18110616\" target=\"_blank\" rel=\"noopener\">小程序开发工具</a></p>\n<p>在申请开发者账号后，需要下载小程序的开发者工具。大家根据自己使用的电脑系统下载对应的版本。笔者使用的是Mac，所以下载Mac OS版本。</p>\n<h4 id=\"Step-3-开始开发\"><a href=\"#Step-3-开始开发\" class=\"headerlink\" title=\"Step 3 | 开始开发\"></a>Step 3 | 开始开发</h4><p>打开开发者工具，创建QuickStart项目，我们就可以开始开发小程序了。</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}